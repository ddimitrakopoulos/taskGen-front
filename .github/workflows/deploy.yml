name: Deploy Monolithic Vite + Node Backend (Dynamic)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Node.js 22
      - uses: actions/setup-node@v3
        with:
          node-version: 22

      # 3Ô∏è‚É£ Install frontend dependencies
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      # 4Ô∏è‚É£ Build frontend
      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      # 5Ô∏è‚É£ Prepare deployment package
      - name: Prepare Deployment Package
        run: |
          rm -rf deploy
          mkdir deploy
          # Copy frontend build output
          cp -r frontend/dist/* deploy/
          # Copy backend code (your API folders inside endpoints)
          cp -r endpoints/* deploy/
          # Install production dependencies
          cd deploy
          npm ci --omit=dev
          cd ..

      # 6Ô∏è‚É£ Azure Login using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 7Ô∏è‚É£ Deploy to Azure dynamically (no publish profile)
      - name: Deploy to Azure App Service
        run: |
          RESOURCE_GROUP="rg-taskGen-dev-weu"
          APP_NAME="app-service-taskGen-dev"

          echo "üîπ Zipping deployment package..."
          zip -r deploy.zip deploy

          echo "üöÄ Deploying to Azure App Service..."
          az webapp deploy \
            --resource-group $RESOURCE_GROUP \
            --name $APP_NAME \
            --src-path deploy.zip \
            --type zip

      # 8Ô∏è‚É£ (Optional) Verify deployment status
      - name: Verify Deployment
        run: |
          APP_NAME="app-service-taskGen-dev"
          RESOURCE_GROUP="rg-taskGen-dev-weu"
          echo "üîç Checking deployment logs..."
          az webapp log tail --name $APP_NAME --resource-group $RESOURCE_GROUP --timeout 10
